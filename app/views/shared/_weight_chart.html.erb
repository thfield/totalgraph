<div class="sparkline" id="spark_pfat"><h3>%Fat</h3></div>
<div class="linechart" id="weightchart"><h3>Weight</h3></div>

<script>
  
  d3.json("<%= user_path(current_user) %>.json", function(error, data) {  
    
    data.forEach(function(d) { d.date = new Date(d.date); });

    nv.addGraph(function() {
      var series = d3.scale.category10();
      series.domain(d3.keys(data[0]).filter(function(key) { return key !== "date" && key !== "pfat"; }));

      var pData = series.domain().map(function(name) {
        return {
          key: name,
          values: data.map(function(d) {
            return {x: d.date, y: +d[name]};
          })
        };
      });

      var chart = nv.models.lineWithFocusChart();

      chart.forceY[0];
      
      chart.xAxis
          .tickFormat(function(d) {
            return d3.time.format("%H:%M %b %e")(new Date(d))
          });

      chart.x2Axis
          .tickFormat(function(d) {
            return d3.time.format("%b %e")(new Date(d))
          });    

      chart.yAxis
          .tickFormat(d3.format(',f'));

      chart.y2Axis
          .tickFormat(d3.format(',f'));

      d3.select('#weightchart').append("svg")
          .datum(pData)
          .transition().duration(500)
          .call(chart);

      nv.utils.windowResize(chart.update);

      return chart;
    });

      
  nv.addGraph(function() {
    var pData = data.map(function(d) { return {x: d.date, y: d.pfat}; });
    var chart = nv.models.sparklinePlus()
 
    chart
      .margin({left:70})
      .yTickFormat(d3.format('f'))
      .x(function(d,i) { return i })
      .xTickFormat(function(d) {
        return d3.time.format("%x")(new Date(pData[d].x))
      })


    d3.select('#spark_pfat').append('svg')
        .datum(pData)
      .transition().duration(250)
        .call(chart);

      return chart;
  });
});

</script>